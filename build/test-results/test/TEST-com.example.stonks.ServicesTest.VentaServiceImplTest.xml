<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.stonks.ServicesTest.VentaServiceImplTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-06-21T23:57:21" hostname="DESKTOP-6KMAHQM" time="1.104">
  <properties/>
  <testcase name="testRegistrarCompra()" classname="com.example.stonks.ServicesTest.VentaServiceImplTest" time="1.104"/>
  <system-out><![CDATA[  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2024-06-21T20:57:16.051-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : Starting VentaServiceImplTest using Java 17.0.11 with PID 17024 (started by facun in D:\UTN\4-Cuarto año\Investigación Operativa\TP Integrador\stonks-back\stonks-back)
2024-06-21T20:57:16.054-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : No active profile set, falling back to 1 default profile: "default"
2024-06-21T20:57:16.694-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-06-21T20:57:16.695-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-06-21T20:57:16.724-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.articulos.ArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.726-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.articulos.FamiliaArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.727-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.DetalleOrdenDeCompraRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.728-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.OrdenDeCompraRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.729-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.ProveedorArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.730-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.ProveedorRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.730-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.ClienteRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.731-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.LineaVentaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.732-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.VentaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:16.732-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
2024-06-21T20:57:16.741-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-06-21T20:57:16.742-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-21T20:57:16.778-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 9 JPA repository interfaces.
2024-06-21T20:57:18.179-03:00  INFO 17024 --- [stonks] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-21T20:57:18.257-03:00  INFO 17024 --- [stonks] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-06-21T20:57:18.295-03:00  INFO 17024 --- [stonks] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-21T20:57:18.437-03:00  INFO 17024 --- [stonks] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-21T20:57:18.471-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-06-21T20:57:18.626-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=ROOT
2024-06-21T20:57:18.630-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-06-21T20:57:18.671-03:00  WARN 17024 --- [stonks] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-21T20:57:19.525-03:00  INFO 17024 --- [stonks] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table articulo (id bigint generated by default as identity, fecha_baja timestamp(6), cod varchar(255), costo_almacenamiento float(24), inventario_maximo integer, lote_optimo integer, nombre varchar(255), precio_venta integer, punto_pedido integer, stock_actual integer, stock_seguridad integer, id_familia_articulo bigint, id_proveedor_predeterminado bigint, primary key (id))
Hibernate: create table cliente (id bigint generated by default as identity, fecha_baja timestamp(6), cuit_cliente varchar(255), nombre_cliente varchar(255), nro_cliente integer, primary key (id))
Hibernate: create table demanda (id bigint generated by default as identity, fecha_baja timestamp(6), año integer not null, cantidad integer not null, mes integer not null, id_articulo bigint, primary key (id))
Hibernate: create table detalle_orden_de_compra (id bigint generated by default as identity, fecha_baja timestamp(6), cantidad integer not null, total_detalle float(53) not null, valor_articulo float(53) not null, id_articulo bigint, id_orden_de_compra bigint, primary key (id))
Hibernate: create table familia_articulo (id bigint generated by default as identity, fecha_baja timestamp(6), cod integer, modelo_inventario enum ('Intervalo_Fijo','Lote_Fijo'), nombre varchar(255), primary key (id))
Hibernate: create table linea_venta (id bigint generated by default as identity, fecha_baja timestamp(6), cantidad integer, contador_linea_venta integer, precio_unitario float(53), id_articulo bigint, primary key (id))
Hibernate: create table orden_de_compra (id bigint generated by default as identity, fecha_baja timestamp(6), costo_envio float(53), costo_total float(53), estado_actual tinyint check (estado_actual between 0 and 5), fecha_creacion timestamp(6), fecha_llegada timestamp(6), nro_orden_de_compra integer not null, id_proveedor bigint, primary key (id))
Hibernate: create table proveedor (id bigint generated by default as identity, fecha_baja timestamp(6), cod_proveedor integer, costo_envio_proveedor float(53), dias_demora_entrega_proveedor integer, email_proveedor varchar(255), nombre_proveedor varchar(255), primary key (id))
Hibernate: create table proveedor_proveedor_articulos (proveedor_id bigint not null, proveedor_articulos_id bigint not null)
Hibernate: create table proveedor_articulo (id bigint generated by default as identity, fecha_baja timestamp(6), precio float(53), articulo_id bigint, primary key (id))
Hibernate: create table venta (id bigint generated by default as identity, fecha_baja timestamp(6), fecha_venta date, nro_venta integer, id_cliente bigint, primary key (id))
Hibernate: create table venta_lineas_venta (venta_id bigint not null, lineas_venta_id bigint not null)
Hibernate: alter table if exists proveedor_proveedor_articulos drop constraint if exists UKnrc1t8m0ecicq4ofayh2rhoeh
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint UKnrc1t8m0ecicq4ofayh2rhoeh unique (proveedor_articulos_id)
Hibernate: alter table if exists venta_lineas_venta drop constraint if exists UKrlp3vdwd432owcm9lgoqohqoh
Hibernate: alter table if exists venta_lineas_venta add constraint UKrlp3vdwd432owcm9lgoqohqoh unique (lineas_venta_id)
Hibernate: alter table if exists articulo add constraint FKpfrftj5u5ss9l5tsflblrbfxl foreign key (id_familia_articulo) references familia_articulo
Hibernate: alter table if exists articulo add constraint FKsph8sbgrid2uyj3dkx7sh7pgb foreign key (id_proveedor_predeterminado) references proveedor
Hibernate: alter table if exists demanda add constraint FKapvcv1ca14ltu6py82qj9r2au foreign key (id_articulo) references articulo
Hibernate: alter table if exists detalle_orden_de_compra add constraint FKea6k9u56tvhiiyk05cfnx6wcs foreign key (id_articulo) references articulo
Hibernate: alter table if exists detalle_orden_de_compra add constraint FK9m7js4nn04ubbi19it7ymdjy7 foreign key (id_orden_de_compra) references orden_de_compra
Hibernate: alter table if exists linea_venta add constraint FK2fslsq7vtch9iy07narrg5tqb foreign key (id_articulo) references articulo
Hibernate: alter table if exists orden_de_compra add constraint FKd70kmcb8s2a2oumua7cal85j5 foreign key (id_proveedor) references proveedor
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint FK1l59hutgiqw7r2hk5w41j8fy3 foreign key (proveedor_articulos_id) references proveedor_articulo
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint FKebc17hrnpijnj9njceml5vijl foreign key (proveedor_id) references proveedor
Hibernate: alter table if exists proveedor_articulo add constraint FKjob79ysyvn7t7pile5bcov09 foreign key (articulo_id) references articulo
Hibernate: alter table if exists venta add constraint FKsor2qmi3thao7a8or49vlohp9 foreign key (id_cliente) references cliente
Hibernate: alter table if exists venta_lineas_venta add constraint FKduipn1ulr3kjigaqvdn5v4nda foreign key (lineas_venta_id) references linea_venta
Hibernate: alter table if exists venta_lineas_venta add constraint FK7q1fn5q9pqfngopy3sibh1y8t foreign key (venta_id) references venta
2024-06-21T20:57:19.593-03:00  INFO 17024 --- [stonks] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-21T20:57:19.998-03:00  INFO 17024 --- [stonks] [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : JSqlParser is in classpath; If applicable, JSqlParser will be used
2024-06-21T20:57:19.999-03:00  INFO 17024 --- [stonks] [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-06-21T20:57:20.922-03:00  WARN 17024 --- [stonks] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-21T20:57:21.679-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : Started VentaServiceImplTest in 5.8 seconds (process running for 6.702)
2024-06-21T20:57:21.731-03:00  INFO 17024 --- [stonks] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-21T20:57:21.734-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-06-21T20:57:21.737-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2024-06-21T20:57:21.765-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : Starting VentaServiceImplTest using Java 17.0.11 with PID 17024 (started by facun in D:\UTN\4-Cuarto año\Investigación Operativa\TP Integrador\stonks-back\stonks-back)
2024-06-21T20:57:21.765-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : No active profile set, falling back to 1 default profile: "default"
2024-06-21T20:57:21.975-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-06-21T20:57:21.976-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2024-06-21T20:57:21.983-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.articulos.ArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.983-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.articulos.FamiliaArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.983-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.DetalleOrdenDeCompraRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.983-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.OrdenDeCompraRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.983-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.ProveedorArticuloRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.984-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.orden_de_compra.ProveedorRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.984-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.ClienteRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.984-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.LineaVentaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.984-03:00  INFO 17024 --- [stonks] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.stonks.repositories.ventas.VentaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2024-06-21T20:57:21.984-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 JDBC repository interfaces.
2024-06-21T20:57:21.988-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-06-21T20:57:21.988-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-21T20:57:22.007-03:00  INFO 17024 --- [stonks] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 9 JPA repository interfaces.
2024-06-21T20:57:22.090-03:00  INFO 17024 --- [stonks] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-21T20:57:22.095-03:00  INFO 17024 --- [stonks] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-06-21T20:57:22.108-03:00  INFO 17024 --- [stonks] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-06-21T20:57:22.109-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-06-21T20:57:22.112-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:test user=ROOT
2024-06-21T20:57:22.113-03:00  INFO 17024 --- [stonks] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-06-21T20:57:22.113-03:00  WARN 17024 --- [stonks] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-06-21T20:57:22.283-03:00  INFO 17024 --- [stonks] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table articulo (id bigint generated by default as identity, fecha_baja timestamp(6), cod varchar(255), costo_almacenamiento float(24), inventario_maximo integer, lote_optimo integer, nombre varchar(255), precio_venta integer, punto_pedido integer, stock_actual integer, stock_seguridad integer, id_familia_articulo bigint, id_proveedor_predeterminado bigint, primary key (id))
Hibernate: create table cliente (id bigint generated by default as identity, fecha_baja timestamp(6), cuit_cliente varchar(255), nombre_cliente varchar(255), nro_cliente integer, primary key (id))
Hibernate: create table demanda (id bigint generated by default as identity, fecha_baja timestamp(6), año integer not null, cantidad integer not null, mes integer not null, id_articulo bigint, primary key (id))
Hibernate: create table detalle_orden_de_compra (id bigint generated by default as identity, fecha_baja timestamp(6), cantidad integer not null, total_detalle float(53) not null, valor_articulo float(53) not null, id_articulo bigint, id_orden_de_compra bigint, primary key (id))
Hibernate: create table familia_articulo (id bigint generated by default as identity, fecha_baja timestamp(6), cod integer, modelo_inventario enum ('Intervalo_Fijo','Lote_Fijo'), nombre varchar(255), primary key (id))
Hibernate: create table linea_venta (id bigint generated by default as identity, fecha_baja timestamp(6), cantidad integer, contador_linea_venta integer, precio_unitario float(53), id_articulo bigint, primary key (id))
Hibernate: create table orden_de_compra (id bigint generated by default as identity, fecha_baja timestamp(6), costo_envio float(53), costo_total float(53), estado_actual tinyint check (estado_actual between 0 and 5), fecha_creacion timestamp(6), fecha_llegada timestamp(6), nro_orden_de_compra integer not null, id_proveedor bigint, primary key (id))
Hibernate: create table proveedor (id bigint generated by default as identity, fecha_baja timestamp(6), cod_proveedor integer, costo_envio_proveedor float(53), dias_demora_entrega_proveedor integer, email_proveedor varchar(255), nombre_proveedor varchar(255), primary key (id))
Hibernate: create table proveedor_proveedor_articulos (proveedor_id bigint not null, proveedor_articulos_id bigint not null)
Hibernate: create table proveedor_articulo (id bigint generated by default as identity, fecha_baja timestamp(6), precio float(53), articulo_id bigint, primary key (id))
Hibernate: create table venta (id bigint generated by default as identity, fecha_baja timestamp(6), fecha_venta date, nro_venta integer, id_cliente bigint, primary key (id))
Hibernate: create table venta_lineas_venta (venta_id bigint not null, lineas_venta_id bigint not null)
Hibernate: alter table if exists proveedor_proveedor_articulos drop constraint if exists UKnrc1t8m0ecicq4ofayh2rhoeh
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint UKnrc1t8m0ecicq4ofayh2rhoeh unique (proveedor_articulos_id)
Hibernate: alter table if exists venta_lineas_venta drop constraint if exists UKrlp3vdwd432owcm9lgoqohqoh
Hibernate: alter table if exists venta_lineas_venta add constraint UKrlp3vdwd432owcm9lgoqohqoh unique (lineas_venta_id)
Hibernate: alter table if exists articulo add constraint FKpfrftj5u5ss9l5tsflblrbfxl foreign key (id_familia_articulo) references familia_articulo
Hibernate: alter table if exists articulo add constraint FKsph8sbgrid2uyj3dkx7sh7pgb foreign key (id_proveedor_predeterminado) references proveedor
Hibernate: alter table if exists demanda add constraint FKapvcv1ca14ltu6py82qj9r2au foreign key (id_articulo) references articulo
Hibernate: alter table if exists detalle_orden_de_compra add constraint FKea6k9u56tvhiiyk05cfnx6wcs foreign key (id_articulo) references articulo
Hibernate: alter table if exists detalle_orden_de_compra add constraint FK9m7js4nn04ubbi19it7ymdjy7 foreign key (id_orden_de_compra) references orden_de_compra
Hibernate: alter table if exists linea_venta add constraint FK2fslsq7vtch9iy07narrg5tqb foreign key (id_articulo) references articulo
Hibernate: alter table if exists orden_de_compra add constraint FKd70kmcb8s2a2oumua7cal85j5 foreign key (id_proveedor) references proveedor
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint FK1l59hutgiqw7r2hk5w41j8fy3 foreign key (proveedor_articulos_id) references proveedor_articulo
Hibernate: alter table if exists proveedor_proveedor_articulos add constraint FKebc17hrnpijnj9njceml5vijl foreign key (proveedor_id) references proveedor
Hibernate: alter table if exists proveedor_articulo add constraint FKjob79ysyvn7t7pile5bcov09 foreign key (articulo_id) references articulo
Hibernate: alter table if exists venta add constraint FKsor2qmi3thao7a8or49vlohp9 foreign key (id_cliente) references cliente
Hibernate: alter table if exists venta_lineas_venta add constraint FKduipn1ulr3kjigaqvdn5v4nda foreign key (lineas_venta_id) references linea_venta
Hibernate: alter table if exists venta_lineas_venta add constraint FK7q1fn5q9pqfngopy3sibh1y8t foreign key (venta_id) references venta
2024-06-21T20:57:22.322-03:00  INFO 17024 --- [stonks] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-21T20:57:22.465-03:00  WARN 17024 --- [stonks] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-21T20:57:22.648-03:00  INFO 17024 --- [stonks] [    Test worker] c.e.s.ServicesTest.VentaServiceImplTest  : Started VentaServiceImplTest in 0.907 seconds (process running for 7.671)
Hibernate: insert into cliente (cuit_cliente,fecha_baja,nombre_cliente,nro_cliente,id) values (?,?,?,?,default)
Hibernate: insert into proveedor (cod_proveedor,costo_envio_proveedor,dias_demora_entrega_proveedor,email_proveedor,fecha_baja,nombre_proveedor,id) values (?,?,?,?,?,?,default)
Hibernate: insert into articulo (cod,costo_almacenamiento,id_familia_articulo,fecha_baja,inventario_maximo,lote_optimo,nombre,precio_venta,id_proveedor_predeterminado,punto_pedido,stock_actual,stock_seguridad,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into proveedor (cod_proveedor,costo_envio_proveedor,dias_demora_entrega_proveedor,email_proveedor,fecha_baja,nombre_proveedor,id) values (?,?,?,?,?,?,default)
Hibernate: insert into articulo (cod,costo_almacenamiento,id_familia_articulo,fecha_baja,inventario_maximo,lote_optimo,nombre,precio_venta,id_proveedor_predeterminado,punto_pedido,stock_actual,stock_seguridad,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into demanda (id_articulo,año,cantidad,fecha_baja,mes,id) values (?,?,?,?,?,default)
Hibernate: update articulo set cod=?,costo_almacenamiento=?,id_familia_articulo=?,fecha_baja=?,inventario_maximo=?,lote_optimo=?,nombre=?,precio_venta=?,id_proveedor_predeterminado=?,punto_pedido=?,stock_actual=?,stock_seguridad=? where id=?
Hibernate: insert into demanda (id_articulo,año,cantidad,fecha_baja,mes,id) values (?,?,?,?,?,default)
Hibernate: update articulo set cod=?,costo_almacenamiento=?,id_familia_articulo=?,fecha_baja=?,inventario_maximo=?,lote_optimo=?,nombre=?,precio_venta=?,id_proveedor_predeterminado=?,punto_pedido=?,stock_actual=?,stock_seguridad=? where id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
